@page "/integrations"
@attribute [Authorize]
@inject IFitbitClient FitbitClient;
@inject IIntegrationsClient IntegrationsClient
@inject NavigationManager NavigationManager
@using MyHealth.Web.Core.Integrations

<h3>Integrations</h3>

@if (HasFitbitIntegration)
{
    <p><em>Fitbit integration found!</em></p>
    <button class="btn btn-danger" @onclick="DeleteFitbitIntegration">Delete</button>
}
else
{
    <button class="btn btn-primary" @onclick="AddFitbitIntegration">Add Fitbit</button>
}

@code {
    private IEnumerable<Integration> _integrations;

    private bool HasFitbitIntegration => _integrations != null && _integrations.Any(i => i.Provider == "Fitbit");
    private string FitbitIntegrationId => _integrations?.FirstOrDefault(i => i.Provider == "Fitbit")?.Id;

    protected override async Task OnInitializedAsync()
    {
        await GetIntegrationsAsync();
    }

    private async Task GetIntegrationsAsync()
    {
        _integrations = (await IntegrationsClient.GetAllIntegrationsAsync()).Integrations;
    }

    private void AddFitbitIntegration()
    {
        string fitbitAuthenticationUri = FitbitClient.GetAuthenticationUri(NavigationManager.BaseUri);
        NavigationManager.NavigateTo(fitbitAuthenticationUri);
    }

    private async Task DeleteFitbitIntegration()
    {
        await IntegrationsClient.DeleteIntegrationAsync(FitbitIntegrationId);
        await GetIntegrationsAsync();
    }
}
